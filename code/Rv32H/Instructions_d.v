// This file is automatically generated, DO NOT EDIT!
// ==================================================
if (is_I) begin

	// JALR
	if (is_JALR) begin
		$display("	JALR");
		
				`RD <= `PC + 4;
				`GOTO($signed(`RS1) + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// LB
	else if (is_LB) begin
		$display("	LB");
		
				`MEM_READ_SB(`RS1 + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// LBU
	else if (is_LBU) begin
		$display("	LBU");
		
				`MEM_READ_UB(`RS1 + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// LH
	else if (is_LH) begin
		$display("	LH");
		
				`MEM_READ_SH(`RS1 + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// LHU
	else if (is_LHU) begin
		$display("	LHU");
		
				`MEM_READ_UH(`RS1 + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// LW
	else if (is_LW) begin
		$display("	LW");
		
				`MEM_READ_W(`RS1 + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// LWU
	else if (is_LWU) begin
		$display("	LWU");
		
				`MEM_READ_W(`RS1 + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

end
else if (is_J) begin

	// JAL
	if (is_JAL) begin
		$display("	JAL");
		
				`RD <= `PC + 4;
				`GOTO($signed(`PC) + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

end
else if (is_R) begin

	// DIV
	if (is_DIV) begin
		$display("	DIV");
		
				if (`RS2 == 0) begin
					`RD <= -1;
					`EXECUTE_DONE;
				end
				else if (&`RS1 && $signed(`RS2) == -1) begin
					`RD <= `RS1;
					`EXECUTE_DONE;
				end
				else begin
					div_signed <= 1;
					if (decode_cycle == `DIV_CYCLE_LATENCY) begin
						`RD <= div_result[31:0];
						`EXECUTE_DONE;
					end
				end
			
	end

	// DIVU
	else if (is_DIVU) begin
		$display("	DIVU");
		
				if (`RS2 == 0) begin
					`RD <= -1;
					`EXECUTE_DONE;
				end
				else begin
					div_signed <= 0;
					if (decode_cycle == `DIV_CYCLE_LATENCY) begin
						`RD <= div_result[31:0];
						`EXECUTE_DONE;
					end
				end
			
	end

	// MUL
	else if (is_MUL) begin
		$display("	MUL");
		
				mul_signed <= 1;
				if (decode_cycle == `MUL_CYCLE_LATENCY) begin
					`RD <= mul_result[31:0];
					`EXECUTE_DONE;
				end
			
	end

	// MULH
	else if (is_MULH) begin
		$display("	MULH");
		
				mul_signed <= 1;
				if (decode_cycle == `MUL_CYCLE_LATENCY) begin
					`RD <= mul_result[63:32];
					`EXECUTE_DONE;
				end
			
	end

	// MULHU
	else if (is_MULHU) begin
		$display("	MULHU");
		
				mul_signed <= 0;
				if (decode_cycle == `MUL_CYCLE_LATENCY) begin
					`RD <= mul_result[63:32];
					`EXECUTE_DONE;
				end
			
	end

	// REM
	else if (is_REM) begin
		$display("	REM");
		
				if (`RS2 == 0) begin
					`RD <= `RS1;
					`EXECUTE_DONE;
				end
				else begin
					div_signed <= 1;
					if (decode_cycle == `DIV_CYCLE_LATENCY) begin
						`RD <= div_remainder[31:0];
						`EXECUTE_DONE;
					end
				end
			
	end

	// REMU
	else if (is_REMU) begin
		$display("	REMU");
		
				if (`RS2 == 0) begin
					`RD <= `RS1;
					`EXECUTE_DONE;
				end
				else begin
					div_signed <= 0;
					if (decode_cycle == `DIV_CYCLE_LATENCY) begin
						`RD <= div_remainder[31:0];
						`EXECUTE_DONE;
					end
				end
			
	end

end
else if (is_S) begin

	// SB
	if (is_SB) begin
		$display("	SB");
		
				`MEM_WRITE_B(`RS1 + $signed(`IMM), `RS2);
				`EXECUTE_DONE;
			
	end

	// SH
	else if (is_SH) begin
		$display("	SH");
		
				`MEM_WRITE_H(`RS1 + $signed(`IMM), `RS2);
				`EXECUTE_DONE;
			
	end

	// SW
	else if (is_SW) begin
		$display("	SW");
		
				`MEM_WRITE_W(`RS1 + $signed(`IMM), `RS2);
				`EXECUTE_DONE;
			
	end

end

// EBREAK
else if (is_EBREAK) begin
	$display("	EBREAK");
			$finish;
		
end

// ECALL
else if (is_ECALL) begin
	$display("	ECALL");
			`EXECUTE_DONE;
		
end

// Unknown instruction.
else begin
	`ERROR;
end
