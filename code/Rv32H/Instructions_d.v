// This file is automatically generated, DO NOT EDIT!
// ==================================================
if (is_B) begin

	// BEQ
	if (is_BEQ) begin
		$display("	BEQ");
		
				if (`RS1 == `RS2)
					`GOTO($signed(`PC) + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// BGE
	else if (is_BGE) begin
		$display("	BGE");
		
				if ($signed(`RS1) >= $signed(`RS2))
					`GOTO($signed(`PC) + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// BGEU
	else if (is_BGEU) begin
		$display("	BGEU");
		
				if (`RS1 >= `RS2)
					`GOTO($signed(`PC) + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// BLT
	else if (is_BLT) begin
		$display("	BLT");
		
				if ($signed(`RS1) < $signed(`RS2))
					`GOTO($signed(`PC) + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// BLTU
	else if (is_BLTU) begin
		$display("	BLTU");
		
				if (`RS1 < `RS2)
					`GOTO($signed(`PC) + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// BNE
	else if (is_BNE) begin
		$display("	BNE");
		
				if (`RS1 != `RS2)
					`GOTO($signed(`PC) + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

end
else if (is_I) begin

	// ADDI
	if (is_ADDI) begin
		$display("	ADDI");
		
				`RD <= $signed(`RS1) + $signed(`IMM);
				`EXECUTE_DONE;
			
	end

	// ADDIW
	else if (is_ADDIW) begin
		$display("	ADDIW");
		
				`RD <= `RS1 + `IMM;
				`EXECUTE_DONE;
			
	end

	// ANDI
	else if (is_ANDI) begin
		$display("	ANDI");
		
				`RD <= `RS1 & `IMM;
				`EXECUTE_DONE;
			
	end

	// JALR
	else if (is_JALR) begin
		$display("	JALR");
		
				`RD <= `PC + 4;
				`GOTO($signed(`RS1) + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// LB
	else if (is_LB) begin
		$display("	LB");
		
				`MEM_READ_SB(`RS1 + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// LBU
	else if (is_LBU) begin
		$display("	LBU");
		
				`MEM_READ_UB(`RS1 + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// LH
	else if (is_LH) begin
		$display("	LH");
		
				`MEM_READ_SH(`RS1 + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// LHU
	else if (is_LHU) begin
		$display("	LHU");
		
				`MEM_READ_UH(`RS1 + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// LW
	else if (is_LW) begin
		$display("	LW");
		
				`MEM_READ_W(`RS1 + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// LWU
	else if (is_LWU) begin
		$display("	LWU");
		
				`MEM_READ_W(`RS1 + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

	// ORI
	else if (is_ORI) begin
		$display("	ORI");
		
				`RD <= `RS1 | `IMM;
				`EXECUTE_DONE;
			
	end

	// SLTI
	else if (is_SLTI) begin
		$display("	SLTI");
		
				`RD <= ($signed(`RS1) < $signed(`IMM)) ? 1 : 0;
				`EXECUTE_DONE;
			
	end

	// SLTIU
	else if (is_SLTIU) begin
		$display("	SLTIU");
		
				`RD <= (`RS1 < `IMM) ? 1 : 0;
				`EXECUTE_DONE;
			
	end

	// XORI
	else if (is_XORI) begin
		$display("	XORI");
		
				`RD <= `RS1 ^ `IMM;
				`EXECUTE_DONE;
			
	end

end
else if (is_J) begin

	// JAL
	if (is_JAL) begin
		$display("	JAL");
		
				`RD <= `PC + 4;
				`GOTO($signed(`PC) + $signed(`IMM));
				`EXECUTE_DONE;
			
	end

end
else if (is_R) begin

	// ADD
	if (is_ADD) begin
		$display("	ADD");
		
				`RD <= alu_rs1_add_rs2; // $signed(`RS1) + $signed(`RS2);
				`EXECUTE_DONE;
			
	end

	// ADDW
	else if (is_ADDW) begin
		$display("	ADDW");
		
				`RD <= `RS1 + `RS2;
				`EXECUTE_DONE;
			
	end

	// AND
	else if (is_AND) begin
		$display("	AND");
		
				`RD <= `RS1 & `RS2;
				`EXECUTE_DONE;
			
	end

	// MUL
	else if (is_MUL) begin
		$display("	MUL");
		
				`RD <= $signed(`RS1) * $signed(`RS2);
				`EXECUTE_DONE;
			
	end

	// OR
	else if (is_OR) begin
		$display("	OR");
		
				`RD <= `RS1 | `RS2;
				`EXECUTE_DONE;
			
	end

	// SLL
	else if (is_SLL) begin
		$display("	SLL");
		
				`RD <= `RS1 << `RS2;
				`EXECUTE_DONE;
			
	end

	// SLLI
	else if (is_SLLI) begin
		$display("	SLLI");
		
				`RD <= `RS1 << `INSTRUCTION[25:20];
				`EXECUTE_DONE;
			
	end

	// SLT
	else if (is_SLT) begin
		$display("	SLT");
		
				`RD <= ($signed(`RS1) < $signed(`RS2)) ? 1 : 0;
				`EXECUTE_DONE;
			
	end

	// SLTU
	else if (is_SLTU) begin
		$display("	SLTU");
		
				`RD <= (`RS1 < `RS2) ? 1 : 0;
				`EXECUTE_DONE;
			
	end

	// SRA
	else if (is_SRA) begin
		$display("	SRA");
		
				`RD <= `RS1 >>> `RS2;
				`EXECUTE_DONE;
			
	end

	// SRAI
	else if (is_SRAI) begin
		$display("	SRAI");
		
				`RD <= `RS1 >>> `INSTRUCTION[25:20];
				`EXECUTE_DONE;
			
	end

	// SRL
	else if (is_SRL) begin
		$display("	SRL");
		
				`RD <= `RS1 >> `RS2;
				`EXECUTE_DONE;
			
	end

	// SRLI
	else if (is_SRLI) begin
		$display("	SRLI");
		
				`RD <= `RS1 >> `INSTRUCTION[25:20];
				`EXECUTE_DONE;
			
	end

	// SUB
	else if (is_SUB) begin
		$display("	SUB");
		
				`RD <= $signed(`RS1) - $signed(`RS2);
				`EXECUTE_DONE;
			
	end

	// XOR
	else if (is_XOR) begin
		$display("	XOR");
		
				`RD <= `RS1 ^ `RS2;
				`EXECUTE_DONE;
			
	end

end
else if (is_S) begin

	// SB
	if (is_SB) begin
		$display("	SB");
		
				`MEM_WRITE_B(`RS1 + $signed(`IMM), `RS2);
				`EXECUTE_DONE;
			
	end

	// SH
	else if (is_SH) begin
		$display("	SH");
		
				`MEM_WRITE_H(`RS1 + $signed(`IMM), `RS2);
				`EXECUTE_DONE;
			
	end

	// SW
	else if (is_SW) begin
		$display("	SW");
		
				`MEM_WRITE_W(`RS1 + $signed(`IMM), `RS2);
				`EXECUTE_DONE;
			
	end

end
else if (is_U) begin

	// AUIPC
	if (is_AUIPC) begin
		$display("	AUIPC");
		
				`RD <= $signed(`PC) + $signed(`IMM);
				`EXECUTE_DONE;
			
	end

	// LUI
	else if (is_LUI) begin
		$display("	LUI");
		
				`RD <= `IMM;
				`EXECUTE_DONE;
			
	end

end

// EBREAK
else if (is_EBREAK) begin
	$display("	EBREAK");
			$finish;
		
end

// Unknown instruction.
else begin
	`ERROR;
end
